@tailwind components;

@layer components {
  .wrapper {
    --extended: 14rem;
    display: grid;
    grid-template-columns:
      var(--col-1, 8rem)
      var(--col-2, 8rem)
      var(--col-3, 8rem)
      var(--col-4, 8rem)
      var(--col-5, 8rem)
      var(--col-6, 8rem)
      var(--col-7, 8rem);
    align-items: flex-start;
    gap: theme(spacing.2);
    max-width: fit-content;
    overflow: auto;

    @apply scrollbar-none -mx-4 snap-x snap-mandatory scroll-px-4 px-4;

    @media (prefers-reduced-motion: no-preference) {
      transition: grid-template-columns 0.3s 0.4s ease-in-out;
    }

    &:has(.card:nth-child(1) input:not(.genderSwitchInput):checked) {
      --col-1: var(--extended);
    }
    &:has(.card:nth-child(2) input:not(.genderSwitchInput):checked) {
      --col-2: var(--extended);
    }
    &:has(.card:nth-child(3) input:not(.genderSwitchInput):checked) {
      --col-3: var(--extended);
    }
    &:has(.card:nth-child(4) input:not(.genderSwitchInput):checked) {
      --col-4: var(--extended);
    }
    &:has(.card:nth-child(5) input:not(.genderSwitchInput):checked) {
      --col-5: var(--extended);
    }
    &:has(.card:nth-child(6) input:not(.genderSwitchInput):checked) {
      --col-6: var(--extended);
    }
    &:has(.card:nth-child(7) input:not(.genderSwitchInput):checked) {
      --col-7: var(--extended);
    }
  }

  .card {
    display: grid;
    scroll-snap-align: start;
    &:not(:has(input:not(.genderSwitchInput):checked)) {
      margin-block-end: 3.5rem;
    }
  }

  .genderSwitch {
    overflow: hidden;
    opacity: 1;
    transition: opacity 0.2s ease-in-out;
    @starting-style {
      opacity: 0;
      transition: opacity 0.2s 0.4s ease-in-out;
    }

    &:has(input[value='male']:checked) {
      & .genderSwitchLabel:has(input[value='male']) {
        color: theme('colors.tertiary');
        &:before {
          background-color: theme('colors.tertiary/0.08');
        }
      }
      & .genderIcon {
        color: theme('colors.tertiary');
        & [data-male] {
          opacity: 1;
        }
        & [data-female] {
          opacity: 0;
          transform: rotate(-15deg);
        }
      }
    }

    &:has(input[value='female']:checked) {
      & .genderSwitchLabel:before {
        background-color: theme('colors.primary/0.08');
        transform: translateX(
          calc(100% + theme(spacing.2) + theme('spacing.10'))
        );
      }
      & .genderSwitchLabel:has(input[value='female']) {
        color: theme('colors.primary');
      }
      & .genderIcon {
        color: theme('colors.primary');
        & [data-female] {
          opacity: 1;
        }
        & [data-male] {
          opacity: 0;
          transform: rotate(15deg);
        }
      }
    }
  }

  .genderSwitchLabel {
    position: relative;
    @apply text-on-surface w-20 rounded-md p-2 text-center transition-colors duration-200;
    &:where(:hover) {
      background-color: theme('colors.on-surface/0.05');
    }
    &:where(:has(:focus-visible):focus-within) {
      outline: 2px auto currentColor;
      outline-offset: 4px;
    }
    &:first-of-type::before {
      display: block;
      position: absolute;
      inset: 0;
      border-radius: theme('borderRadius.md');
      pointer-events: none;
      content: '';
      transition: all 0.24s ease-out;
    }
  }

  .genderWrapper {
    @apply flex flex-row items-center gap-2;
  }

  .genderSwitchInput {
    @apply sr-only;
  }

  .genderIcon {
    @apply relative mt-1 size-10;
    & g {
      @apply origin-center opacity-0 transition-all duration-300;
    }
  }
}
