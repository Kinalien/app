@reference "@nou/config/theme.css";

@layer components {
  .listItem {
    display: flex;
    align-items: center;
    gap: var(--spacing-3);
    width: 100%;
    flex-shrink: 0;
    cursor: default;
    user-select: none;
    background: transparent;
    transition: background-color 0.2s ease-out;
    outline: none;
    border-radius: var(--radius-xl);
    min-height: var(--spacing-12);
    padding: var(--spacing-3);

    @apply text-sm;

    &:where(:focus-visible:focus, :has(:focus-visible):focus-within) {
      outline: 2px auto currentColor;
    }
    &:where(:disabled, [aria-disabled="true"]) {
      /* background-color: theme('colors.disabled');
      color: theme('colors.on-disabled'); */
      cursor: not-allowed;
      pointer-events: none;
    }
    &:where(:first-child) {
      border-end-start-radius: 2px;
      border-end-end-radius: 2px;
    }
    &:where(:last-child) {
      border-start-start-radius: 2px;
      border-start-end-radius: 2px;
    }
    &:where(:not(:first-child, :last-child)) {
      border-radius: var(--radius-sm);
    }

    &:where(:first-child:last-child) {
      border-radius: var(--radius-xl);
    }
  }

  .listItemNeutral {
    color: var(--color-on-surface);
    &:where(:hover, [aria-selected="true"], [aria-current="true"]) {
      background-color: theme("color.tertiary/0.05");
    }
    &:where(:focus, :focus-within, :active) {
      background-color: theme("color.tertiary/0.08");
    }
  }
  .listItemDestructive {
    color: var(--color-error);
    &:where(:hover, [aria-selected="true"], [aria-current="true"]) {
      background-color: theme("color.error/0.05");
    }
    &:where(:focus, :focus-within, :active) {
      background-color: theme("color.error/0.08");
    }
  }
}
